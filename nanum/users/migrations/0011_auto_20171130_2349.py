# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-30 14:49
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('posts', '0008_auto_20171128_1936'),
        ('topics', '0004_topic_description'),
        ('users', '0010_auto_20171130_0208'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerBookmarkRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Answer')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerDownVoteRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Answer')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerUpVoteRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Answer')),
            ],
        ),
        migrations.CreateModel(
            name='CommentDownVoteRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='CommentUpVoteRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionBookmarkRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Question')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionFollowRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Question')),
            ],
        ),
        migrations.CreateModel(
            name='TopicExpertiseFollowRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='topics.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='TopicInterestFollowRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='topics.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='UserFollowRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='answerbookmark',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='answerbookmark',
            name='answer',
        ),
        migrations.RemoveField(
            model_name='answerbookmark',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='answerdownvote',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='answerdownvote',
            name='answer',
        ),
        migrations.RemoveField(
            model_name='answerdownvote',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='answerupvote',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='answerupvote',
            name='answer',
        ),
        migrations.RemoveField(
            model_name='answerupvote',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='commentdownvote',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='commentdownvote',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='commentdownvote',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='commentupvote',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='commentupvote',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='commentupvote',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='questionbookmark',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='questionbookmark',
            name='question',
        ),
        migrations.RemoveField(
            model_name='questionbookmark',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='questionfollow',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='questionfollow',
            name='question',
        ),
        migrations.RemoveField(
            model_name='questionfollow',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='topicexpertisefollow',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='topicexpertisefollow',
            name='topic',
        ),
        migrations.RemoveField(
            model_name='topicexpertisefollow',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='topicinterestfollow',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='topicinterestfollow',
            name='topic',
        ),
        migrations.RemoveField(
            model_name='topicinterestfollow',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='userfollow',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='userfollow',
            name='target',
        ),
        migrations.RemoveField(
            model_name='userfollow',
            name='user',
        ),
        migrations.AlterField(
            model_name='user',
            name='bookmarked_answers',
            field=models.ManyToManyField(blank=True, related_name='bookmarked_users', through='users.AnswerBookmarkRelation', to='posts.Answer'),
        ),
        migrations.AlterField(
            model_name='user',
            name='bookmarked_questions',
            field=models.ManyToManyField(blank=True, related_name='who_bookmarked', through='users.QuestionBookmarkRelation', to='posts.Question'),
        ),
        migrations.AlterField(
            model_name='user',
            name='downvoted_answers',
            field=models.ManyToManyField(blank=True, related_name='downvoted_users', through='users.AnswerDownVoteRelation', to='posts.Answer'),
        ),
        migrations.AlterField(
            model_name='user',
            name='downvoted_comments',
            field=models.ManyToManyField(blank=True, related_name='downvoted_users', through='users.CommentDownVoteRelation', to='posts.Comment'),
        ),
        migrations.AlterField(
            model_name='user',
            name='following',
            field=models.ManyToManyField(blank=True, related_name='followers', through='users.UserFollowRelation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='user',
            name='following_questions',
            field=models.ManyToManyField(blank=True, related_name='followers', through='users.QuestionFollowRelation', to='posts.Question'),
        ),
        migrations.AlterField(
            model_name='user',
            name='topic_expertise',
            field=models.ManyToManyField(blank=True, related_name='users_with_expertise', through='users.TopicExpertiseFollowRelation', to='topics.Topic'),
        ),
        migrations.AlterField(
            model_name='user',
            name='topic_interests',
            field=models.ManyToManyField(blank=True, related_name='users_with_interest', through='users.TopicInterestFollowRelation', to='topics.Topic'),
        ),
        migrations.AlterField(
            model_name='user',
            name='upvoted_answers',
            field=models.ManyToManyField(blank=True, related_name='upvoted_users', through='users.AnswerUpVoteRelation', to='posts.Answer'),
        ),
        migrations.AlterField(
            model_name='user',
            name='upvoted_comments',
            field=models.ManyToManyField(blank=True, related_name='upvoted_users', through='users.CommentUpVoteRelation', to='posts.Comment'),
        ),
        migrations.DeleteModel(
            name='AnswerBookmark',
        ),
        migrations.DeleteModel(
            name='AnswerDownVote',
        ),
        migrations.DeleteModel(
            name='AnswerUpVote',
        ),
        migrations.DeleteModel(
            name='CommentDownVote',
        ),
        migrations.DeleteModel(
            name='CommentUpVote',
        ),
        migrations.DeleteModel(
            name='QuestionBookmark',
        ),
        migrations.DeleteModel(
            name='QuestionFollow',
        ),
        migrations.DeleteModel(
            name='TopicExpertiseFollow',
        ),
        migrations.DeleteModel(
            name='TopicInterestFollow',
        ),
        migrations.DeleteModel(
            name='UserFollow',
        ),
        migrations.AddField(
            model_name='userfollowrelation',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower_relations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userfollowrelation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following_relations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='topicinterestfollowrelation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='topicexpertisefollowrelation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='questionfollowrelation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='questionbookmarkrelation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentupvoterelation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentdownvoterelation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answerupvoterelation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answerdownvoterelation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answerbookmarkrelation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='userfollowrelation',
            unique_together=set([('user', 'target')]),
        ),
        migrations.AlterUniqueTogether(
            name='topicinterestfollowrelation',
            unique_together=set([('user', 'topic')]),
        ),
        migrations.AlterUniqueTogether(
            name='topicexpertisefollowrelation',
            unique_together=set([('user', 'topic')]),
        ),
        migrations.AlterUniqueTogether(
            name='questionfollowrelation',
            unique_together=set([('user', 'question')]),
        ),
        migrations.AlterUniqueTogether(
            name='questionbookmarkrelation',
            unique_together=set([('user', 'question')]),
        ),
        migrations.AlterUniqueTogether(
            name='commentupvoterelation',
            unique_together=set([('user', 'comment')]),
        ),
        migrations.AlterUniqueTogether(
            name='commentdownvoterelation',
            unique_together=set([('user', 'comment')]),
        ),
        migrations.AlterUniqueTogether(
            name='answerupvoterelation',
            unique_together=set([('user', 'answer')]),
        ),
        migrations.AlterUniqueTogether(
            name='answerdownvoterelation',
            unique_together=set([('user', 'answer')]),
        ),
        migrations.AlterUniqueTogether(
            name='answerbookmarkrelation',
            unique_together=set([('user', 'answer')]),
        ),
    ]
